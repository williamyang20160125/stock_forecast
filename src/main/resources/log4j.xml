<?xml version="1.0" encoding="GBK"?>
<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd">
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">
<!-- 
appender有5种输出方式,分别为
  org.apache.log4j.ConsoleAppender (控制台)  
  org.apache.log4j.FileAppender (文件)
  org.apache.log4j.RollingFileAppender(滚动日志文件)
  org.apache.log4j.DailyRollingFileAppender (每天产生一个日志文件)
  org.apache.log4j.WriterAppender (将日志信息以流格式发送到任意指定的地方)
 -->

	<!-- 设置控制台输出 -->
	<appender name="STDOUT" class="org.apache.log4j.ConsoleAppender">
		<param name="target" value="System.out"/>
		<!-- 
		Log4j提供的layout有以下几种：
		  org.apache.log4j.HTMLLayout（以HTML表格形式布局），
		  org.apache.log4j.PatternLayout（可以灵活地指定布局模式），
		  org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串），
		  org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息） 
		 -->
		<layout class="org.apache.log4j.PatternLayout">
		<!-- 配置日志输出的格式
              参数都以%开始后面不同的参数代表不同的格式化信息（参数按字母表顺序列出）：
              %c     输出所属logger的名称                                                                          
              %C     输出所属类的全名，可在修改为 %C{Num} ,Num类名输出的围  如："org.apache.elathen.ClassName", %C{2}将输出elathen.ClassName                                                                          
              %d     输出日志时间其格式为 %d{yyyy-MM-dd HH:mm:ss,SSS}，可指定格式 如 %d{HH:mm:ss}
              %l     输出日志事件发生位置，包括类目名、发生线程，在代码中的行数
              %n     换行符
              %m     输出代码指定信息，如info(“message”),输出message
              %p     输出优先级，即 FATAL ,ERROR 等
              %r     输出从启动到显示该log信息所耗费的毫秒数
              %t     输出产生该日志事件的线程名-->
      <!-- The default pattern: Date Priority [Category] Message\n -->
			<param name="ConversionPattern" value="%t %d{ABSOLUTE} %-5p [%c] (%C:%L) - %m%n"/>
		</layout>
	</appender>

	<!-- 设置通道名称：sql和输出方式:org.apache.log4j.DailyRollingFileAppender -->
	<appender name="sql" class="org.apache.log4j.DailyRollingFileAppender">
		<!--日志文件路径和文件名称 -->
		<param name="File" value="/usr/local/tomcat/logs/zp_solr_client_sql.log"/>
		<!-- 设置是否在重新启动服务时，在原有日志的基础添加新日志，为了避免重启后日志丢失，通常设置为true -->
		<param name="Append" value="true"/>
		<!-- 配置日志输出的格式 -->
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%t %d{ABSOLUTE} %-5p [%c] (%C:%L) - %m%n"/>
		</layout>
	</appender>
	
	<!-- 设置通道名称：error和输出方式:org.apache.log4j.DailyRollingFileAppender -->
	<appender name="error" class="org.apache.log4j.DailyRollingFileAppender">
		<!--日志文件路径和文件名称 -->
		<param name="File" value="/usr/local/tomcat/logs/zp_solr_client_error.log"/>
		<!-- 设置是否在重新启动服务时，在原有日志的基础添加新日志，为了避免重启后日志丢失，通常设置为true -->
		<param name="Append" value="true"/>

		<!-- 配置日志输出的格式 -->
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%t %d{ABSOLUTE} %-5p [%c] (%C:%L) - %m%n"/>
		</layout>
	</appender>
	
	<!-- 设置通道名称：info和输出方式:org.apache.log4j.DailyRollingFileAppender -->
	<appender name="info" class="org.apache.log4j.DailyRollingFileAppender">
		<!--日志文件路径和文件名称 -->
		<param name="File" value="/usr/local/tomcat/logs/zp_solr_client_info.log"/>
		<!-- 设置是否在重新启动服务时，在原有日志的基础添加新日志，为了避免重启后日志丢失，通常设置为true -->
		<param name="Append" value="true"/>

		<!-- 配置日志输出的格式 -->
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%t %d{ABSOLUTE} %-5p [%c] (%C:%L) - %m%n"/>
		</layout>
	</appender>

	      	
	<logger name="sql" additivity="true">
		<priority value="info"/>
		<appender-ref ref="sql"/>
	</logger>
	<logger name="error" additivity="true">
		<priority value="error"/>
		<appender-ref ref="error"/>
	</logger>
	<logger name="info" additivity="true">
		<priority value="info"/>
		<appender-ref ref="info"/>
	</logger>
	<root>    
        <appender-ref ref="STDOUT"/>   
        <priority value="info"/> 
    </root>  
</log4j:configuration>
